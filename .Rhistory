print(bihar_data)
#Keep only female
bihar_adult_female <- filter(bihar_data, adult==1, female==1)
#Lets view the female only table
print(bihar_adult_female)
#Default histogram in ggplot
ggplot(bihar_adult_female, aes(height_cm))+geom_histogram()
#Some people looks like they are very small, filtering them out
bihar_adult_female_trunc <- filter(bihar_adult_female, height_cm>120, height_cm<200)
print(bihar_adult_female_trunc)
#Default histogram in ggplot
ggplot(bihar_adult_female_trunc, aes(height_cm))+geom_histogram()
#Save the histogram in a pdf
ggsave("graphs/bihar_female.pdf")
+geom_histogram(fill="blue")
#Default histogram in ggplot
ggplot(bihar_adult_female_trunc, aes(height_cm))+
geom_histogram(fill="blue")
#Default histogram in ggplot
ggplot(bihar_adult_female_trunc, aes(height_cm))+
geom_histogram(fill="blue", color="darkblue")
#Default histogram in ggplot
ggplot(bihar_adult_female_trunc, aes(height_cm))+
geom_histogram(fill="blue", color="darkblue")+
xlab("Height in Centemetres, Female!")
#Default histogram in ggplot
ggplot(bihar_adult_female_trunc, aes(height_cm))+
geom_histogram(fill="blue", color="darkblue")+
xlab("Height in Centemetres, Bihar Female!")
#Save the histogram in a pdf
ggsave("graphs/bihar_female.pdf")
#Default histogram in ggplot
ggplot(bihar_adult_female_trunc, aes(height_cm))+
geom_histogram(fill="blue", color="darkblue", width="10")+
xlab("Height in Centemetres, Bihar Female!")
#Default histogram in ggplot
ggplot(bihar_adult_female_trunc, aes(height_cm))+
geom_histogram(fill="blue", color="darkblue")+
geom_bar(width = "10")+
xlab("Height in Centemetres, Bihar Female!")
#Default histogram in ggplot
ggplot(bihar_adult_female_trunc, aes(height_cm))+
geom_histogram(fill="blue", color="darkblue", binwidth = "10")+
xlab("Height in Centemetres, Bihar Female!")
#Default histogram in ggplot
ggplot(bihar_adult_female_trunc, aes(height_cm))+
geom_histogram(fill="blue", color="darkblue", binwidth = 10)+
xlab("Height in Centemetres, Bihar Female!")
#Default histogram in ggplot
ggplot(bihar_adult_female_trunc, aes(height_cm))+
geom_histogram(fill="blue", color="darkblue", binwidth = 50)+
xlab("Height in Centemetres, Bihar Female!")
#Default histogram in ggplot
ggplot(bihar_adult_female_trunc, aes(height_cm))+
geom_histogram(fill="blue", color="darkblue", binwidth = 15)+
xlab("Height in Centemetres, Bihar Female!")
#Default histogram in ggplot
ggplot(bihar_adult_female_trunc, aes(height_cm))+
geom_histogram(fill="blue", color="darkblue", binwidth = 2)+
xlab("Height in Centemetres, Bihar Female!")
#Default histogram in ggplot
ggplot(bihar_adult_female_trunc, aes(height_cm))+
geom_histogram(fill="blue", color="darkblue", binwidth = 1)+
xlab("Height in Centemetres, Bihar Female!")
#Default histogram in ggplot
ggplot(bihar_adult_female_trunc, aes(height_cm))+
geom_histogram(fill="blue", color="darkblue", binwidth = 0.2)+
xlab("Height in Centemetres, Bihar Female!")
#Default histogram in ggplot
ggplot(bihar_adult_female_trunc, aes(height_cm))+
geom_histogram(fill="blue", color="darkblue", binwidth = 2)+
xlab("Height in Centemetres, Bihar Female!")
#Lets view the female only table
print(bihar_adult_female)
plot_grid(default, female_trunc, labels = "Female Height in Bihar")
#Default histogram in ggplot
default <- ggplot(bihar_adult_female_trunc, aes(height_cm))+
geom_histogram(fill="blue", color="darkblue", binwidth = 2)+
xlab("Height in Centemetres, Bihar Female!")
female_trunc <- ggplot(bihar_adult_female_trunc, aes(height_cm))+
geom_histogram(fill="blue", color="darkblue", binwidth = 2)+
xlab("Height in Centemetres, Bihar Female!")
plot_grid(default, female_trunc, labels = "Female Height in Bihar")
bihar_male <- filter(bihar_data, female==0, adult==1)
#Default histogram in ggplot
default <- ggplot(bihar_adult_female, aes(height_cm))+
geom_histogram(fill="blue", color="darkblue", binwidth = 2)+
xlab("Height in Centemetres, Bihar Female!")
female_trunc <- ggplot(bihar_adult_female_trunc, aes(height_cm))+
geom_histogram(fill="blue", color="darkblue", binwidth = 2)+
xlab("Height in Centemetres, Bihar Female!")
male_height <- ggplot(bihar_male, aes(height_cm))+
geom_histogram(fill="red", color="darkred", binwidth = 2)+
xlab("Height in Centemetres, Bihar Female!")
plot_grid(default, female_trunc, labels = "Female Height in Bihar")
plot_grid(default, female_trunc, male_height, labels = "Female Height in Bihar")
bihar_male <- filter(bihar_data, female==0, adult==1, height_cm>120, height_cm<180)
plot_grid(default, female_trunc, male_height, labels = "Female Height in Bihar")
male_height <- ggplot(bihar_male, aes(height_cm))+
geom_histogram(fill="red", color="darkred", binwidth = 2)+
xlab("Height in Centemetres, Bihar Female!")
plot_grid(default, female_trunc, male_height, labels = "Female Height in Bihar")
#Save the histogram in a pdf
ggsave("graphs/bihar_female.pdf")
#US data
us_data <- read_csv("data/US_sample_data.csv")
#Have a look at the US Dta
print(us_data)
#US female data
us_female_data <- filter(us_data, female==1, adult==1)
print(us_female_data)
ggplot(us_female_data, aes(height_cm))
ggplot(us_female_data, aes(height_cm))
ggplot(us_female_data, aes(height_cm))+
geom_histogram()
ggplot(us_female_data, aes(height_cm))+
geom_histogram(fill="red", color="darkred")
setwd("~/Documents/DEDP/Data Science for Social Scientists/Dinr")
#Header
sample_csv <- read.csv("sampledata.csv", header = TRUE)
#Header
sample_csv <- read.csv("data/Bihar_sample_data.csv", header = TRUE)
View(sample_csv)
#Header
sample_csv <- read.csv("data/Bihar_sample_data.csv", header = TRUE)
View(sample_csv)
sample_csv <- read.csv("data/Bihar_sample_data.csv", header = FALSE)
View(sample_csv)
#sep
sample_text <- read.table("data/data-export.txt", sep = ",", header = TRUE)
#sep
sample_text <- read.table("data/data-export.txt", sep = ",", header = TRUE)
#sep
sample_text <- read.table("data/data-export.txt", sep = ",", header = TRUE)
View(sample_text)
#Asses Data
# After importing the data you can view it to see if it was correctly loaded, here you can use Summary Function
summary(sample_text)
# Check the number of rows
nrow(sample_text)
# Check number of columns
ncol(sample_text)
# Check number of columns
ncol(sample_text)
max(sample_csv)
max(sample_text)
min(sample_text)
unique(sample_text)
unique(sample_text$X28.Day)
sort(unique(sample_text$X28.Day))
length(unique(sample_text$X28.Day)) # Here we see how many unique entries are there in the specified column
which(sample_text$X28.Day=1)
which(sample_text$X28.Day==1)
which(sample_text$X28.Day==1) # This will let you know what is the row content of the column that has a value specified
length(which(sample_text$X28.Day==1))
length(which(sample_text$X28.Day==1)) # How many data points we have that have a specified value in a specified column
is.matrix(sample_text)
is.data.frame(sample_text)
is.matrix(sample_text) # This will let us know if the data we are working with is a matrix. TRUE/FALSE
is.data.frame(sample_text) # Likewise with this we will know if the data we are working with is a data frame. Returns TRUE/FALSE
## Manipulating the data
sample_csv_matrix <- as.matrix(sample_text)
is.matrix(sample_csv_matrix)
View(sample_csv_matrix)
a <- matrix(1, 2, 3)
is.matrix(a)
b <- as.data.frame(a)
is.data.frame(b)
is.data.frame(a)
is.data.frame(b) # Confirm its a data frame
a
b
# Transpose the data (matrix)
t(a)
a
# Delete add a row/column in the data
a <- a[-1. ] # First value inside [] os a row number and the second is a column number (-ve) value deletes the row
a
a <- rbind(a, c(2, 2, 2))
1
a
a <- matrix(1, 2, 3) # Create simple matrix
is.matrix(a) # Confirm its a matrix
b <- as.data.frame(a) # Convert it to a data frame
b
is.data.frame(b) # Confirm its a data frame
# Transpose the data (matrix)
t(a) # This will transpose from a 3X2 matrix to a 2X3 matrix
# Delete add a row/column in the data
a <- a[-1. ] # First value inside [] os a row number and the second is a column number (-ve) value deletes the row
a
a <- rbind(a, c(2, 2, 2))
a <- matrix(1, 2, 3) # Create simple matrix
is.matrix(a) # Confirm its a matrix
b <- as.data.frame(a) # Convert it to a data frame
b
is.data.frame(b) # Confirm its a data frame
# Transpose the data (matrix)
t(a) # This will transpose from a 3X2 matrix to a 2X3 matrix
# Delete add a row/column in the data
a <- a[-1, ] # First value inside [] os a row number and the second is a column number (-ve) value deletes the row
a
a <- rbind(a, c(2, 2, 2))
a
a <- cbind(a, c(3, 3))
a
## Manipulating the data
sample_csv_matrix <- as.matrix(sample_text) # This will convert from other data representations to a matrix representation
sample_text <- read.table("data/data-export.txt", sep = ",", header = TRUE)is
git add .
rm(list=ls())
#Loading the data
gender_data <- as.tibble(read.csv("data/Gender_StatsData.csv"))
#Loading the data
gender_data <- as.tibble(read.csv("data/Gender_StatsData.csv"))
lifecycle::last_warning()
#Loading the data
gender_data <- as_tibble(read.csv("data/Gender_StatsData.csv"))
lifecycle::last_warning()
View(gender_data)
gender_data
str()
str(gender_data)
head(gender_data)
tail(gender_data)
dim(gender_data)
View(gender_data)
teenager_fr <- filter(gender_data, Indicator.Code == "SP.ADO.TFRT")
teenager_fr
teenager_fr_equiv <- subset(gender_data, Indicator.Code == "SP.ADO.TFRT")
teenager_fr_equiv
rm(teenager_fr_equiv)
## Exploring the data we just loadded
mean_in_1975 <- mean(teenager_fr$X1975, na.rm = TRUE)
## Exploring the data we just loadded
mean_in_1975 <- mean(teenager_fr$X1975, na.rm = TRUE)
mean_in_1975
mean_1960
mean_1960 <- mean(teenager_fr$X1960, na.rm = TRUE)
mean_1960
sd_1960 <- sd(teenager_fr$X1960, na.rm = TRUE)
sd_1960
# What is the sample mean and standard deviation of the adolescent fertility rate in 2000?
mean_2000 <- mean(teenager_fr$X2000, na.rm = TRUE)
mean_2000
sd_2000 <- sd(teenager_fr$X2000, na.rm = TRUE)
sd_2000
mean_1980 <- mean(teenager_fr$X1980, na.rm = TRUE)
mean_1990 <- mean(teenager_fr$X1990, na.rm = TRUE)
rm(list=ls())
#Loading the data
gender_data <- as_tibble(read.csv("data/Gender_StatsData.csv"))
teenager_fr <- filter(gender_data, Indicator.Code == "SP.ADO.TFRT")
mean(teenager_fr)
mean(teenager_fr, na.rm = TRUE)
mean
means_of_teenager <- mean(teenager_fr, na.rm = TRUE)
View(teenager_fr)
mean_1961 <- mean(teenager_fr$X1961, na.rm = TRUE)
mean(teenager_fr$X1961, na.rm = TRUE)
mean(teenager_fr$X1962, na.rm = TRUE)
mean(teenager_fr$X1963, na.rm = TRUE)
mean(teenager_fr$X1964, na.rm = TRUE)
mean(teenager_fr$X1965, na.rm = TRUE)
mean(teenager_fr$X1966, na.rm = TRUE)
mean(teenager_fr$X1967, na.rm = TRUE)
mean(teenager_fr$X1968, na.rm = TRUE)
mean(teenager_fr$X1969, na.rm = TRUE)
mean(teenager_fr$X1970, na.rm = TRUE)
mean(teenager_fr$X1971, na.rm = TRUE)
mean(teenager_fr$X1972, na.rm = TRUE)
mean(teenager_fr$X1973, na.rm = TRUE)
mean(teenager_fr$X1974, na.rm = TRUE)
mean(teenager_fr$X1975, na.rm = TRUE)
mean(teenager_fr$X1976, na.rm = TRUE)
mean(teenager_fr$X1977, na.rm = TRUE)
mean(teenager_fr$X1978, na.rm = TRUE)
mean(teenager_fr$X1979, na.rm = TRUE)
mean(teenager_fr$X1980, na.rm = TRUE)
mean(teenager_fr$X1981, na.rm = TRUE)
mean(teenager_fr$X1982, na.rm = TRUE)
mean(teenager_fr$X1983, na.rm = TRUE)
mean(teenager_fr$X1984, na.rm = TRUE)
mean(teenager_fr$X1985, na.rm = TRUE)
mean(teenager_fr$X1986, na.rm = TRUE)
mean(teenager_fr$X1987, na.rm = TRUE)
mean(teenager_fr$X1988, na.rm = TRUE)
mean(teenager_fr$X1989, na.rm = TRUE)
mean(teenager_fr$X1990, na.rm = TRUE)
mean(teenager_fr$X1991, na.rm = TRUE)
mean(teenager_fr$X1992, na.rm = TRUE)
mean(teenager_fr$X1993, na.rm = TRUE)
mean(teenager_fr$X1994, na.rm = TRUE)
mean(teenager_fr$X1995, na.rm = TRUE)
mean(teenager_fr$X1996, na.rm = TRUE)
mean(teenager_fr$X1997, na.rm = TRUE)
mean(teenager_fr$X1998, na.rm = TRUE)
mean(teenager_fr$X1999, na.rm = TRUE)
mean(teenager_fr$X2000, na.rm = TRUE)
View(teenager_fr)
unique(teenager_fr, Country.Code)
unique(teenager_fr$Country.Code)
which(teenager_fr$Country.Code == "LIC")
View(teenager_fr)
byincomelevel <- filter(teenager_fr, Country.Code %in% c("LIC", "HIC", "MID", "WLD" ))
byincomelevel
byincomelevel <- filter(teenager_fr, Country.Code %in% c("LIC", "HIC", "MIC", "WLD" ))
byincomelevel
plotdata_bygroupyear <- gather(byincomelevel, X1960:X200, Country.Code, FertilityRate) %>% select(Year, Country.Name, Country.Code, FertilityRate)
plotdata_bygroupyear <- gather(byincomelevel, Year, Country.Code, FertilityRate) %>% select(Year, Country.Name, Country.Code, FertilityRate)
plotdata_bygroupyear <- gather(byincomelevel, Year, Country.Code, "X1960:X2015") %>% select(Year, Country.Name, Country.Code, FertilityRate)
plotdata_bygroupyear <- gather(byincomelevel, Year, Country.Code, X1960:X2015) %>% select(Year, Country.Name, Country.Code, FertilityRate)
plotdata_bygroupyear <- gather(byincomelevel, Year, FertilityRate, X1960:X2015) %>% select(Year, Country.Name, Country.Code, FertilityRate)
View(plotdata_bygroupyear)
plotdata_byyear<-select(plotdata_bygroupyear, Country.Code, Year, FertilityRate) %>% spread(Country.Code, FertilityRate)
View(plotdata_byyear)
plotdata_byyear<-spread(plotdata_bygroupyear, Country.Code, FertilityRate)
plotdata_byyear
plotdata_byyear<-select(plotdata_bygroupyear, Country.Code, Year, FertilityRate) %>% spread(Country.Code, FertilityRate)
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code))
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group_by(Country.Code)))
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate))
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code))+geom_line()
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code, color=Country.Code))+geom_line()
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code) color=Country.Code )+geom_line()
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code) color=Country.Code )+geom_line()
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code))+ color=Country.Code geom_line()
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code))+geom_line(color=Country.Code)
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code))+geom_line()color=Country.Code
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code, color=Country.Code))+geom_line()
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code, color=Country.Code, labs(title='Fertility Rate by Country-Income-Level over Time')))+geom_line()
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code, color=Country.Code))+geom_line(labs(title='Fertility Rate by Country-Income-Level over Time'))
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code, color=Country.Code))+geom_line()+labs(title='Fertility Rate by Country-Income-Level over Time')
plotdata_bygroupyear <- mutate(plotdata_bygroupyear, Year=as.numeric(str_sub(Year,-4)))
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code, color=Country.Code))+geom_line()+labs(title='Fertility Rate by Country-Income-Level over Time')
plotdata_bygroupyear <- mutate(plotdata_bygroupyear, Year=as.numeric(str_sub(Year,2,5)))
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code, color=Country.Code))+geom_line()+labs(title='Fertility Rate by Country-Income-Level over Time')
plotdata_bygroupyear <- mutate(plotdata_bygroupyear, Year=as.numeric(str_replace(Year,"X", "")))
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code, color=Country.Code))+geom_line()+labs(title='Fertility Rate by Country-Income-Level over Time')
plotdata_bygroupyear <- mutate(plotdata_bygroupyear, Year=as.numeric(str_replace(Year,"X", "")))
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code, color=Country.Code))+geom_line()+labs(title='Fertility Rate by Country-Income-Level over Time')
library("stringr")
plotdata_bygroupyear <- mutate(plotdata_bygroupyear, Year=as.numeric(str_replace(Year,"X", "")))
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code, color=Country.Code))+geom_line()+labs(title='Fertility Rate by Country-Income-Level over Time')
plotdata_bygroupyear <- mutate(plotdata_bygroupyear, Year=as.numeric(str_sub(Year,2,5)))
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code, color=Country.Code))+geom_line()+labs(title='Fertility Rate by Country-Income-Level over Time')
plotdata_bygroupyear <- mutate(plotdata_bygroupyear, Year=as.numeric(str_sub(Year,-4)))
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code, color=Country.Code))+geom_line()+labs(title='Fertility Rate by Country-Income-Level over Time')
plotdata_bygroupyear <- mutate(plotdata_bygroupyear, Year=as.numeric(str_sub(Year,-4)))
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code, color=Country.Code))+geom_line()+labs(title='Fertility Rate by Country-Income-Level over Time')
plotdata_byyear
plotdata_byyear<-spread(plotdata_bygroupyear, Country.Code, FertilityRate)
ggplot(plotdata_bygroupyear, aes(x=Year, y=FertilityRate, group=Country.Code, color=Country.Code))+geom_line()+labs(title='Fertility Rate by Country-Income-Level over Time')
histdata_twoyears <- select(teenager_fr, Country.Name, Country.Code, Indicator.Name, Indicator.Code, X1960, X2000)
View(histdata_twoyears)
histdata_twoyears <- gather(teenager_fr, Year, FertilityRate, X1960, X2000) %>%
select(Year, Country.Name, Country.Code, FertilityRate)
View(histdata_twoyears)
#Remove all entries without FetilityRate value
histdata_twoyears <- filter(histdata_twoyears,!is.na(FertilityRate))
histdata_twoyears <- gather(teenager_fr, Year, FertilityRate, X1960, X2000) %>%
select(Year, Country.Name, Country.Code, FertilityRate)
length(histdata_twoyears)
histdata_twoyears <- select(teenager_fr, Country.Name, Country.Code, Indicator.Name, Indicator.Code, X1960, X2000)
histdata_twoyears <- gather(teenager_fr, Year, FertilityRate, X1960, X2000) %>%
select(Year, Country.Name, Country.Code, FertilityRate)
length(histdata_twoyears)
count(histdata_twoyears)
#Remove all entries without FetilityRate value
histdata_twoyears <- filter(histdata_twoyears,!is.na(FertilityRate))
count(histdata_twoyears)
# Plotting the two data into a graph
ggplot(histdata_twoyears, aes(x=FertilityRate)) +
geom_histogram(data=subset(histdata_twoyears, Year=="X1960"),
color="darkred", fill="red", alpha=0.2) +
geom_histogram(data=subset(histdata_twoyears, Year=="X2000"),
color="darkblue", fill="blue", alpha=0.2)
ggsave("hist.png")
# Plotting the two data into a graph
ggplot(histdata_twoyears, aes(x=FertilityRate)) +
geom_histogram(data=subset(histdata_twoyears, Year=="X1960"),
color="darkred", fill="red", alpha=0.2, bins = 10) +
geom_histogram(data=subset(histdata_twoyears, Year=="X2000"),
color="darkblue", fill="blue", alpha=0.2)
# Plotting the two data into a graph
ggplot(histdata_twoyears, aes(x=FertilityRate)) +
geom_histogram(data=subset(histdata_twoyears, Year=="X1960"),
color="darkred", fill="red", alpha=0.2, bins = 10) +
geom_histogram(data=subset(histdata_twoyears, Year=="X2000"),
color="darkblue", fill="blue", alpha=0.2, binwidth = 20)
# Plotting the two data into a graph
ggplot(histdata_twoyears, aes(x=FertilityRate)) +
geom_histogram(data=subset(histdata_twoyears, Year=="X1960"),
color="darkred", fill="red", alpha=0.2, bins = 10) +
geom_histogram(data=subset(histdata_twoyears, Year=="X2000"),
color="darkblue", fill="blue", alpha=0.2, binwidth = 30)
# Plotting the two data into a graph
ggplot(histdata_twoyears, aes(x=FertilityRate)) +
geom_histogram(data=subset(histdata_twoyears, Year=="X1960"),
color="darkred", fill="red", alpha=0.2, bins = 10) +
geom_histogram(data=subset(histdata_twoyears, Year=="X2000"),
color="darkblue", fill="blue", alpha=0.2, binwidth = 25)
# Plotting the two data into a graph
ggplot(histdata_twoyears, aes(x=FertilityRate)) +
geom_histogram(data=subset(histdata_twoyears, Year=="X1960"),
color="darkred", fill="red", alpha=0.2, bins = 10) +
geom_histogram(data=subset(histdata_twoyears, Year=="X2000"),
color="darkblue", fill="blue", alpha=0.2, binwidth = 26)
# Plotting the two data into a graph
ggplot(histdata_twoyears, aes(x=FertilityRate)) +
geom_histogram(data=subset(histdata_twoyears, Year=="X1960"),
color="darkred", fill="red", alpha=0.2, bins = 10) +
geom_histogram(data=subset(histdata_twoyears, Year=="X2000"),
color="darkblue", fill="blue", alpha=0.2, binwidth = 25.6)
# Plotting the two data into a graph
ggplot(histdata_twoyears, aes(x=FertilityRate)) +
geom_histogram(data=subset(histdata_twoyears, Year=="X1960"),
color="darkred", fill="red", alpha=0.2, bins = 10) +
geom_histogram(data=subset(histdata_twoyears, Year=="X2000"),
color="darkblue", fill="blue", alpha=0.2, binwidth = 25.7)
# Plotting the two data into a graph
ggplot(histdata_twoyears, aes(x=FertilityRate)) +
geom_histogram(data=subset(histdata_twoyears, Year=="X1960"),
color="darkred", fill="red", alpha=0.2, bins = 10) +
geom_histogram(data=subset(histdata_twoyears, Year=="X2000"),
color="darkblue", fill="blue", alpha=0.2)
# Plotting the two data into a graph
ggplot(histdata_twoyears, aes(x=FertilityRate)) +
geom_histogram(data=subset(histdata_twoyears, Year=="X1960"),
color="darkred", fill="red", alpha=0.2, bins = 10) +
geom_histogram(data=subset(histdata_twoyears, Year=="X2000"),
color="darkblue", fill="blue", alpha=0.2, boundary = 0)
# Plotting the two data into a graph
ggplot(histdata_twoyears, aes(x=FertilityRate)) +
geom_histogram(data=subset(histdata_twoyears, Year=="X1960"),
color="darkred", fill="red", alpha=0.2) +
geom_histogram(data=subset(histdata_twoyears, Year=="X2000"),
color="darkblue", fill="blue", alpha=0.2, boundary = 0)
# Plotting the two data into a graph
ggplot(histdata_twoyears, aes(x=FertilityRate)) +
geom_histogram(data=subset(histdata_twoyears, Year=="X1960"),
color="darkred", fill="red", alpha=0.2) +
geom_histogram(data=subset(histdata_twoyears, Year=="X2000"),
color="darkblue", fill="blue", alpha=0.2, center = 0)
# Plotting the two data into a graph
ggplot(histdata_twoyears, aes(x=FertilityRate)) +
geom_histogram(data=subset(histdata_twoyears, Year=="X1960"),
color="darkred", fill="red", alpha=0.2) +
geom_histogram(data=subset(histdata_twoyears, Year=="X2000"),
color="darkblue", fill="blue", alpha=0.2, center = 0)
#Question 20
ggplot(histdata_twoyears, aes(x=FertilityRate, group=Year, color=Year, alpha=0.2)) +
geom_histogram(aes(y=..density..)) +
geom_density(data=subset(histdata_twoyears, Year=="X1960"), color="darkred", fill="red", alpha=0.2, bw=5)+
geom_density(data=subset(histdata_twoyears, Year=="X2000"), color="darkblue", fill="blue", alpha=0.2, bw=5)
#Question 20
ggplot(histdata_twoyears, aes(x=FertilityRate, group=Year, color=Year, alpha=0.2)) +
geom_histogram(aes(y=..density..)) +
geom_density(data=subset(histdata_twoyears, Year=="X1960"), color="darkred", fill="red", alpha=0.2, bw=5, kernel = "gaussian")+
geom_density(data=subset(histdata_twoyears, Year=="X2000"), color="darkblue", fill="blue", alpha=0.2, bw=5)
#Question 20
ggplot(histdata_twoyears, aes(x=FertilityRate, group=Year, color=Year, alpha=0.2)) +
geom_histogram(aes(y=..density..)) +
geom_density(data=subset(histdata_twoyears, Year=="X1960"), color="darkred", fill="red", alpha=0.2, bw=5, kernel = "epanechnikov")+
geom_density(data=subset(histdata_twoyears, Year=="X2000"), color="darkblue", fill="blue", alpha=0.2, bw=5)
#Question 20
ggplot(histdata_twoyears, aes(x=FertilityRate, group=Year, color=Year, alpha=0.2)) +
geom_histogram(aes(y=..density..)) +
geom_density(data=subset(histdata_twoyears, Year=="X1960"), color="darkred", fill="red", alpha=0.2, bw=5, kernel = "rectangular")+
geom_density(data=subset(histdata_twoyears, Year=="X2000"), color="darkblue", fill="blue", alpha=0.2, bw=5)
#Question 20
ggplot(histdata_twoyears, aes(x=FertilityRate, group=Year, color=Year, alpha=0.2)) +
geom_histogram(aes(y=..density..)) +
geom_density(data=subset(histdata_twoyears, Year=="X1960"), color="darkred", fill="red", alpha=0.2, bw=5, kernel = "triangular")+
geom_density(data=subset(histdata_twoyears, Year=="X2000"), color="darkblue", fill="blue", alpha=0.2, bw=5)
#Question 20
ggplot(histdata_twoyears, aes(x=FertilityRate, group=Year, color=Year, alpha=0.2)) +
geom_histogram(aes(y=..density..)) +
geom_density(data=subset(histdata_twoyears, Year=="X1960"), color="darkred", fill="red", alpha=0.2, bw=5, kernel = "biweight")+
geom_density(data=subset(histdata_twoyears, Year=="X2000"), color="darkblue", fill="blue", alpha=0.2, bw=5)
#Question 20
ggplot(histdata_twoyears, aes(x=FertilityRate, group=Year, color=Year, alpha=0.2)) +
geom_histogram(aes(y=..density..)) +
geom_density(data=subset(histdata_twoyears, Year=="X1960"), color="darkred", fill="red", alpha=0.2, bw=5, kernel = "cosine")+
geom_density(data=subset(histdata_twoyears, Year=="X2000"), color="darkblue", fill="blue", alpha=0.2, bw=5)
#Question 20
ggplot(histdata_twoyears, aes(x=FertilityRate, group=Year, color=Year, alpha=0.2)) +
geom_histogram(aes(y=..density..)) +
geom_density(data=subset(histdata_twoyears, Year=="X1960"), color="darkred", fill="red", alpha=0.2, bw=5, kernel = "optcosine")+
geom_density(data=subset(histdata_twoyears, Year=="X2000"), color="darkblue", fill="blue", alpha=0.2, bw=5)
#Question 20
ggplot(histdata_twoyears, aes(x=FertilityRate, group=Year, color=Year, alpha=0.2)) +
geom_histogram(aes(y=..density..)) +
geom_density(data=subset(histdata_twoyears, Year=="X1960"), color="darkred", fill="red", alpha=0.2, bw=5, kernel = "rectangular")+
geom_density(data=subset(histdata_twoyears, Year=="X2000"), color="darkblue", fill="blue", alpha=0.2, bw=5)
#Question 20
ggplot(histdata_twoyears, aes(x=FertilityRate, group=Year, color=Year, alpha=0.2)) +
geom_histogram(aes(y=..density..)) +
geom_density(data=subset(histdata_twoyears, Year=="X1960"), color="darkred", fill="red", alpha=0.2, bw=5, kernel = "epanechnikov")+
geom_density(data=subset(histdata_twoyears, Year=="X2000"), color="darkblue", fill="blue", alpha=0.2, bw=5)
#Preliminaries
#---------------------------------------
rm(list=ls())
install.packages('plot3D')
library(plot3D)
#Creating the vector x and y
M <- mesh(seq(0,1,length=100), seq(0,1,length=100))
x<-M$x
y<-M$y
z<-6/5*(M$x+M$y^2)
#Plotting this pdf
persp3D(x, y, z, xlab='X variable', ylab= 'Y variable', xlim = c(0,1), main= "Plotting joint pdf")
